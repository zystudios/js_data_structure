【智能版重构】

【项目的背景是什么】 ： 早期的贴吧m站，是php+jq开发的，运行了很多年，到2017年的时候，用vue2.0重新开发了一份，但是后台服务没有变,还是老的java架构
2019年，百度开始推行服务器go计划，2020年贴吧服务器要从java迁移go，因此，借此机会整个贴吧m站进行了重构改版。

【当前项目的目的是什么】：早期项目是外包开发，基于历史原因，代码开发的不规范，也没有留下文档，很多逻辑已经无法说清，因此
需要把当前业务整体梳理，为后期维护扫清障碍

【在开发过程中，你的角色是什么】：项目负责人，代领2个同学一起重构

【在开发过程中有遇到过什么样的难题】：

遇到最大的难题不是技术问题，而是如何推广ts和jest，为了规范项目的开发，我们决定采用ts，ts的上手有一定的成本
而且对于js写习惯的人，可能不太适应，至于jest，也会额外增加开发成本。当时为了这个事情还进行过好几次讨论。大家
到底要不要引入这些，因为大部分人可能对这个比较陌生，而且可能会引入额外的工作量，因此，积极性不高

【遇到这些问题，你都是如何进行解决的】；
1 普及知识，先给大家讲清楚ts和jest是什么东西，让大家有一个初步的印象，为此，专门做了一个ppt给大家分享
2 实战，通过实际的代码编写，给大家讲清楚ts和js的语法区别，以及jest如何写一个断言，写一个好的测试用例，让大家能够感同身受
  这个也是采用分享的形式，总共讲了二次，一次是ts，一次是jest
3 项目对比，当时重构的时候，我们选了1个不太复杂的个人中心页面，然后是用js开发的，剩下的页面都是ts开发的，当这个页面开发完成的时候
我们就拿出来做了一个对比，不仅对比了规范，语言特点，还对比了可维护性，可复用性。当时我们还演示了一个例子，比如有个变量
本来是字符串的，故意写成了数字，ts编译的时候就会报错了，但是js不会，结果他运行的时候报错了，因为写成数字以后触发了隐式转换
通过这些，让大家了解使用ts的一些好处和意义

jest单元测试主要是大家平常写代码的时候，经常不注意异常处理，最常见的就是，对于接口的值，不加判断，直接使用，或者某些function
也不会对入参做校验，虽然正常情况下没事，但是一旦出错，就可能引发比较严重的后果， 比如页面崩溃

当时也是举了一个简单的例子，我们项目里有一个格式化数字的方法，入参没有判断，输入一个负数就报错了
通过jest编写测试用例，传入各种边界值，就能发现这个函数写的不健壮，就会给出错误提示，来辅助开发者及时的改正


【项目完成之后，取得了哪些成果】；
1 整个团队推广了ts的使用，目前所有的项目都接入了ts，而且项目的规范程度提高了
2 整个团队推广了jest单元测试，要求每个项目的增量覆盖率不低于80%，而且我们还会鼓励互相写测试用例
因为自己写的代码，对自己是白盒，写测试用例可能有覆盖不全的问题，但是对别人，就是黑盒，他只需要了解入参和出参，就可以写测试用例
通过这种方式，发现了不少隐患
3 项目开发过程中，对于一些可以复用的模块，我们还发布了npm包，可以方便其他项目使用，比如一些时间格式化，数字格式化
表单校验规则等等
