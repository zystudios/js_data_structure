【项目的背景是什么；】
目前主要是基于手百来开发小程序，但是产品有需求要开发微信小程序，qq小程序
如果单独开发3套，一个是耗时耗力，再一个会造成很多功能重复，因此需要有一个解决方案

【当前项目的目的是什么】；
能够进行统一的开发，解放人力，提高开发效率，加快产品迭代


【在开发过程中，你的角色是什么】；负责人，就一个

【在开发过程中有遇到过什么样的难题；】
1 方案选型
2 抹平三个小程序差异  

遇到这些问题，你都是如何进行解决的；
1 方案选型
  当时有几个方案，一个是采用现成的市面方案，比如uniapp 或者taro等，他们都支持多端编译
  另一个是，手百单独开发，qq和微信统一一个方案单独开发
  第三个是，三个小程序，只开发一个，剩下两个通过技术手段转换

  方案1 ，比较成熟，而且你不需要学习小程序开发，只需要会vue或者react就可以了，上手快，效率高
  但是，当时大家都同意用这个方案，但是这个有一个明显的弊端，那就是性能差，为什么，是因为，这些工具，是采用vue
  或者react开发的，他们也是做了妥协，就是提高了开发的便利性，但是牺牲了性能，因为他没办法通过硬转换的方式，把代码编译到小程序
  而是在小程序运行的时候，同时运行了一套vue环境或者react环境，然后采用数据同步的方式来和小程序交互。这个在taro官网上写的
  很清楚，而且这些工具也都公开了内部原理。所以，如果是要求不高的小程序，完全可以用这种方式
  但是，我们对小程序要求很高，尤其是fmp，所以不能采用这一方案

  第二个是手百单独开发，微信qq一套，因为微信和qq是同一家产品，非常的相似，有一些工具可以做一些转换，但是没有特别完美的，总有一些问题

  所以，我们想，既然微信和qq能转换，我们能不能实现从手百转为微信或者qq
  我们也调研了一些市面方案，我们发现有一些工具可以把微信转为手百，但是没有把手百转为微信的，分析了一些原理以后，决定尝试自己来开发一个工具

  2 抹平三个小程序差异

  如果要开发一个转换工具，就需要了解三个小程序之间的差异，因此，又把三个小程序的差异性整理了出来
  通过分析，发现经过多年的发展，小程序之间差异性已经没有很大了，主要就是一些语法和规则的不同，
  我们先准备一个配置文件，表明各个小程序的语法差异
  比如模板文件格式，手百是swan，微信是wxml，qq是qml
  一些逻辑方法，比如手百是s-if 微信是wx：if，qq是qq：if等等
  然后通过正则表达式统一转换处理

  然后我们整理了一份api列表，主要是针对名称有差异的api，但是入参出参相同的
  这部分也会做转换

  最后，为了兼容一些不太方便转换的差异，我们设计了一个语法结构

  通过标志出来是哪个小程序，打包生成的时候，就只拷贝这部分的代码，这样能最大的保证兼容性

  除了以上差异化的抹平，对一些规则的抹平也做了处理
  比如微信小程序的图片要生成base64格式
  qq小程序的尺寸单位是rpx等等，需要一些换算





【项目完成之后，取得了哪些成果】；
项目分好几期，现在还在不断优化完善中
通过这个工具，我们只需要维护一个手百小程序，就可以同时生成微信和qq小程序，大大提高了开发效率，节省了人力
而且由于是硬转换，没有性能损耗